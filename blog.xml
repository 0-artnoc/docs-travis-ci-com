<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://about.travis-ci.org//</id>
  <title>The Travis Blog</title>
  <updated>2012-02-27T11:00:00Z</updated>
  <link rel="alternate" href="http://about.travis-ci.org//"/>
  <link rel="self" href="http://about.travis-ci.org//blog.xml"/>
  <author>
    <name>Team Travis</name>
    <uri>https://github.com/travis-ci</uri>
  </author>
  <entry>
    <id>tag:about.travis-ci.org,2012-02-27://blog/announcing_python_and_perl_support_on_travis_ci/</id>
    <title type="html">Announcing Python and Perl project support on Travis CI</title>
    <published>2012-02-27T11:00:00Z</published>
    <updated>2012-02-27T11:00:00Z</updated>
    <link rel="alternate" href="http://about.travis-ci.org//blog/announcing_python_and_perl_support_on_travis_ci/"/>
    <content type="html">&lt;p&gt;Just shy of a week ago we announced support Java, Scala, and Groovy. Well, we thought to ourselves ‘we already support 8 languages, why not more?’, and MOAR you shall have!&lt;/p&gt;

&lt;p&gt;Today we are happy to announce first class support for Python and Perl projects!&lt;/p&gt;

&lt;p&gt;Adding support for Perl and Python was a no brainer for us, not that it was easy, because it wasn’t, but that both languages were sought after by their respective communities and complete the quest for the three P’s (PHP, Perl, and Python). &lt;/p&gt;

&lt;p&gt;Perl, which has been around since 1987 (Genesis &lt;a href="http://youtu.be/TlBIa8z_Mts"&gt;“Land Of Confusion”&lt;/a&gt;)and has a toolset just as strong and mature as its community. For example, the Perl community has had a variation of Travis for the last 10 years called CPANTesters, with the difference being that CPANTesters tests releases while we test active development.&lt;/p&gt;

&lt;p&gt;Python, around since the early 90’s (think MC Hammer &lt;a href="http://youtu.be/_UJaLq4YOo0"&gt;“Too Legit to Quit”&lt;/a&gt;, 1991), and in fact it’s OLDER than Java! It is used for pretty much EVERYTHING you can think of, from research at CERN, to build website (YouTube and DISQUS), scripting for Games (Battlefield 2), and scripting for Graphics programs (Autodesk Maya, GIMP, Panda3D and Blender to name a few). Pretty much, you have used Python and you didn’t even know it!&lt;/p&gt;

&lt;h2 id="wait-what-is-travis-ci-anyway"&gt;Wait, What Is Travis CI Anyway?&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://travis-ci.org"&gt;Travis CI&lt;/a&gt; is a distributed continuous integration for the open source community. It is integrated with GitHub and offers first class support for multiple technologies. Our CI environment provides many tools, libraries, and services (MySQL, PostgreSQL, Redis, RabbitMQ, MongoDB and so on), and you don’t have to bother setting up your own CI server.&lt;/p&gt;

&lt;p&gt;You can watch build logs in near-real time in your browser, access logs later, and even link to log line numbers (for example, when reporting an issue).&lt;/p&gt;

&lt;p&gt;Thanks to Github integration, Travis CI lets your contributors effortlessly add their development forks to test work-in-progress branches and makes your CI status very visible to the community thanks to our &lt;a href="http://about.travis-ci.org/docs/user/status-images/"&gt;CI badges&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Started in early 2011, Travis CI has since run half a million builds for over 6,000 open source projects, including Ruby, Ruby on Rails, RubyGems, Node.js, Leiningen, Symfony and many more.&lt;/p&gt;

&lt;h2 id="getting-your-python-project-on-travis-ci"&gt;Getting Your Python Project on Travis CI&lt;/h2&gt;

&lt;p&gt;Travis CI provides multiple Python and Perl versions to test against. To get started, you need to add one file
(.travis.yml) and the Github hook as described in the &lt;a href="http://about.travis-ci.org/docs/user/getting-started/"&gt;Getting Started guide&lt;/a&gt;. A minimal .travis.yml
would look like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;language: python
python:
  - "2.6"
  - "2.7"
  - "3.2"
# command to install dependencies
install: pip install -r requirements.txt --use-mirrors
# command to run tests
script: nosetests
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It is possible to add new commands to the build lifecycle, please refer to &lt;a href="http://about.travis-ci.org/"&gt;our documentation&lt;/a&gt;, which now includes a guide dedicated to &lt;a href="http://about.travis-ci.org/docs/user/languages/python/"&gt;Python&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="getting-your-perl-project-on-travis-ci"&gt;Getting Your Perl Project on Travis CI&lt;/h2&gt;

&lt;p&gt;Travis CI provides three Perl versions to test against. To get started, you need to add one file
(.travis.yml) and the Github hook as described in the &lt;a href="http://about.travis-ci.org/docs/user/getting-started/"&gt;Getting Started guide&lt;/a&gt;. A minimal .travis.yml
would look like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;language: perl
perl:
  - "5.14"
  - "5.12"
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Travis CI will will run widely used&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cpanm --installdeps --notest .
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;command to install your project’s dependencies. For running tests, Travis CI will try to detect &lt;code&gt;Build.PL&lt;/code&gt; or &lt;code&gt;Makefile.PL&lt;/code&gt; file in your repository root
and will run either&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;perl Build.PL &amp;amp;&amp;amp; ./Build test
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;perl Makefile.PL &amp;amp;&amp;amp; make test
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It is possible to override these commands and add new ones to the build lifecycle, please refer to &lt;a href="http://about.travis-ci.org/"&gt;our documentation&lt;/a&gt;, which now includes a guide dedicated to &lt;a href="http://about.travis-ci.org/docs/user/languages/perl/"&gt;Perl&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id="build-workflow"&gt;Build workflow&lt;/h3&gt;

&lt;p&gt;Travis’ build workflow usually is&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Clone your repository from GitHub&lt;/li&gt;
  &lt;li&gt;Pick language/runtime version to use&lt;/li&gt;
  &lt;li&gt;Run &lt;code&gt;before_install&lt;/code&gt; commands (can be more than one)&lt;/li&gt;
  &lt;li&gt;Install dependencies. This will use cpanm for Perl and pip for Python. You can override the command using the &lt;code&gt;install&lt;/code&gt; key in your .travis.yml.&lt;/li&gt;
  &lt;li&gt;Run one or more &lt;code&gt;before_script&lt;/code&gt; commands.&lt;/li&gt;
  &lt;li&gt;Run the &lt;code&gt;script&lt;/code&gt; command, e.g. &lt;code&gt;perl Makefile.PL &amp;amp;&amp;amp; make test&lt;/code&gt;. This too can be overriden in .travis.yml. Python projects are required to provide &lt;code&gt;script:&lt;/code&gt; command.&lt;/li&gt;
  &lt;li&gt;Report the build has finished running.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="learn-more"&gt;Learn more&lt;/h3&gt;

&lt;p&gt;To learn what tools and services (mysql, postgres, riak, etc.) are available in the CI environment, refer to the &lt;a href="http://about.travis-ci.org/docs/user/ci-environment/"&gt;CI environment&lt;/a&gt; guide.&lt;/p&gt;

&lt;p&gt;If you need help, feel free to join #travis on irc.freenode.net, ping us on Twitter (&lt;a href="http://twitter.com/travisci"&gt;@travisci&lt;/a&gt;) and ask questions on &lt;a href="https://groups.google.com/group/travis-ci"&gt;our mailing list&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="thank-you-contributors"&gt;Thank You Contributors&lt;/h2&gt;

&lt;p&gt;We would like to thank &lt;a href="http://twitter.com/dstufft"&gt;Donald Stufft&lt;/a&gt;, &lt;a href="http://twitter.com/kennethreitz"&gt;Kenneth Reitz&lt;/a&gt;, &lt;a href="http://twitter.com/jezdez"&gt;Jannis Leidel&lt;/a&gt; and &lt;a href="http://twitter.com/dreid"&gt;David Reid&lt;/a&gt; for helping us making Python support happen and initial field testing.&lt;/p&gt;

&lt;p&gt;Perl support wouldn’t be possible without amazing work and advice by &lt;a href="http://twitter.com/judofyr"&gt;Magnus Holm&lt;/a&gt;, &lt;a href="http://twitter.com/dukeleto"&gt;Jonathan “Duke” Leto&lt;/a&gt; (also a big YAY for adding Parrot to Travis CI!), and &lt;a href="http://twitter.com/fxn"&gt;Xavier Noria&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Also, if you have a spare minute, send a &lt;em&gt;HUGE&lt;/em&gt; thanks to &lt;a href="http://twitter.com/michaelklishin"&gt;Michael Klishin&lt;/a&gt; who works day and night (seriously, we can not figure out when he sleeps, or if he sleeps!) maintaining the VMs and making sure they are up to date. He was the driving force behind adding Java support, and was instrumental in adding Python and Perl support. So please send him a tweet to say thanks, because without Michael we would still be at just Ruby support!&lt;/p&gt;

&lt;h2 id="next-steps"&gt;Next steps&lt;/h2&gt;

&lt;p&gt;Python and Perl support brings the total number of languages supported by Travis CI to 10. We love adding support to even more languages, but we think for now we need to focus on features like pre-tested pull requests that will benefit all projects, regardless of the language.&lt;/p&gt;

&lt;p&gt;If you want to help us make Travis CI even better, consider &lt;a href="https://love.travis-ci.org"&gt;making a donation&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:about.travis-ci.org,2012-02-22://blog/announcing_support_for_java_scala_and_groovy_on_travis_ci/</id>
    <title type="html">Announcing Java, Scala and Groovy project support on travis-ci.org</title>
    <published>2012-02-21T20:00:00Z</published>
    <updated>2012-02-21T20:00:00Z</updated>
    <link rel="alternate" href="http://about.travis-ci.org//blog/announcing_support_for_java_scala_and_groovy_on_travis_ci/"/>
    <content type="html">&lt;p&gt;Travis CI started in early 2011 as a service for the Ruby community with the simple vision to make CI easy for OSS libraries and services. It wasn’t long until we added support for Erlang, Clojure, Node.js and PHP. And, in fact, it is easy to build many other projects by supplying your own commands.&lt;/p&gt;

&lt;p&gt;Today we are excited to announce support for Java, Scala, and Groovy!&lt;/p&gt;

&lt;p&gt;The JVM ecosystem is very vibrant with multiple exciting languages maturing and being adopted by companies far and wide. In fact, since November 2011 Travis started using the JVM (JRuby) for several of our applications. The JVM and JRuby gave us access to a very solid runtime, as well as a vast selection of stable libraries, helping us to keep up with the growth over the last year.&lt;/p&gt;

&lt;h2 id="wait-what-is-travis-ci-anyway"&gt;Wait, What Is Travis CI Anyway?&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://travis-ci.org"&gt;Travis CI&lt;/a&gt; is a distributed continuous integration for the open source community. It is integrated with GitHub and offers first class support for multiple technologies. Our CI environment provides many tools, libraries, and services (MySQL, PostgreSQL, Redis, RabbitMQ, MongoDB and so on), and you don’t have to bother setting up your own CI server.&lt;/p&gt;

&lt;p&gt;You can watch build logs in near-real time in your browser, access logs later, and even link to log line numbers (for example, when reporting an issue).&lt;/p&gt;

&lt;p&gt;Thanks to Github integration, Travis CI lets your contributors effortlessly add their development forks to test work-in-progress branches and makes your CI status very visible to the community thanks to our &lt;a href="http://about.travis-ci.org/docs/user/status-images/"&gt;CI badges&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Started in early 2011, Travis CI has since run half a million builds for over 6,000 open source projects, including Ruby, Ruby on Rails, RubyGems, Node.js, Leiningen, Symfony and many more.&lt;/p&gt;

&lt;h2 id="getting-your-project-on-travis-ciorg"&gt;Getting Your Project on travis-ci.org&lt;/h2&gt;

&lt;p&gt;Travis CI currently provides OpenJDK 6, Maven 3, SBT 0.11.x and Gradle (currently 1.0 Milestone 8). To get started, you need to add one file
(.travis.yml) and the Github hook as described in the &lt;a href="http://about.travis-ci.org/docs/user/getting-started/"&gt;Getting Started guide&lt;/a&gt;. If your
project uses Maven or Gradle, a minimal .travis.yml would look like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;language: java
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;for Java, or&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;language: groovy
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;for Groovy and so on. Then Travis will see if you have a &lt;code&gt;build.gradle&lt;/code&gt; or &lt;code&gt;pom.xml&lt;/code&gt; file in your repository root and will run the standard dependency installation and testing commands, like&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mvn test
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gradle check
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It is possible to override these commands and add new ones to the build lifecycle, please refer to &lt;a href="http://about.travis-ci.org/"&gt;our documentation&lt;/a&gt;, which now includes guides dedicated to &lt;a href="http://about.travis-ci.org/docs/user/languages/java/"&gt;Java&lt;/a&gt;, &lt;a href="http://about.travis-ci.org/docs/user/languages/scala/"&gt;Scala&lt;/a&gt; and &lt;a href="http://about.travis-ci.org/docs/user/languages/groovy/"&gt;Groovy&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id="build-workflow"&gt;Build workflow&lt;/h3&gt;

&lt;p&gt;Travis’ build workflow usually is&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Clone your repository from GitHub&lt;/li&gt;
  &lt;li&gt;(If applicable) pick language/runtime version to use&lt;/li&gt;
  &lt;li&gt;Run &lt;code&gt;before_install&lt;/code&gt; commands (can be more than one)&lt;/li&gt;
  &lt;li&gt;Install dependencies. Travis will try to detect whether project uses Gradle and SBT and run their respective commands, falling back to &lt;code&gt;mvn install&lt;/code&gt;. You can override the command using the &lt;code&gt;install&lt;/code&gt; key in your .travis.yml.&lt;/li&gt;
  &lt;li&gt;Run one or more &lt;code&gt;before_script&lt;/code&gt; commands.&lt;/li&gt;
  &lt;li&gt;Run the &lt;code&gt;script&lt;/code&gt; command, e.g. &lt;code&gt;gradle check&lt;/code&gt; or &lt;code&gt;mvn test&lt;/code&gt;, falling back to &lt;code&gt;ant test&lt;/code&gt;. This too can be overriden in .travis.yml.&lt;/li&gt;
  &lt;li&gt;Report the build has finished running.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="support-for-multiple-jdks-in-the-travis-ci-environment"&gt;Support for multiple JDKs in the Travis CI Environment&lt;/h3&gt;

&lt;p&gt;travis-ci.org currently provides only one JDK. This is not on par with our support for Ruby (a dozen of versions/implementations), Erlang (several OTP releases)
and so on. We will add support for testing against multiple JDKs near in the future.&lt;/p&gt;

&lt;p&gt;Note that Clojure and Scala build tools allow testing against multiple versions and it is just as valid for Travis CI. This is documented in our guides:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://about.travis-ci.org/docs/user/languages/scala/"&gt;Clojure guide&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://about.travis-ci.org/docs/user/languages/scala/"&gt;Scala guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="learn-more"&gt;Learn more&lt;/h3&gt;

&lt;p&gt;To learn what tools and services (mysql, postgres, riak, etc.) are available in the CI environment, refer to the &lt;a href="http://about.travis-ci.org/docs/user/ci-environment/"&gt;CI environment&lt;/a&gt; guide.&lt;/p&gt;

&lt;p&gt;If you need help, feel free to join #travis on irc.freenode.net, ping us on Twitter (&lt;a href="http://twitter.com/travisci"&gt;@travisci&lt;/a&gt;) and ask questions on &lt;a href="https://groups.google.com/group/travis-ci"&gt;our mailing list&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="thank-you-contributors"&gt;Thank You Contributors&lt;/h2&gt;

&lt;p&gt;We would like to thank Gilles Cornu for doing most of the work on the Scala builder and updating our SBT Chef cookbook to 0.11.x.&lt;/p&gt;

&lt;h2 id="next-steps"&gt;Next steps&lt;/h2&gt;

&lt;p&gt;We don’t want to stop here! There are so many other fantastic languages to add, and if all goes well we should have Perl and Python support around the corner. And if you want to help out, &lt;a href="https://love.travis-ci.org"&gt;donating to Travis CI&lt;/a&gt; will make it happen sooner.&lt;/p&gt;

&lt;h2 id="discuss-on-hacker-news"&gt;Discuss on Hacker News&lt;/h2&gt;

&lt;p&gt;You can discuss Java, Scala and Groovy support on travis-ci.org &lt;a href="http://news.ycombinator.com/item?id=3616923"&gt;on Hacker News&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:about.travis-ci.org,2011-11-13://blog/first_class_php_support_on_travis_ci/</id>
    <title type="html">Announcing "first class" PHP project support!</title>
    <published>2011-11-13T16:08:00Z</published>
    <updated>2011-11-13T16:08:00Z</updated>
    <link rel="alternate" href="http://about.travis-ci.org//blog/first_class_php_support_on_travis_ci/"/>
    <content type="html">&lt;p&gt;Today we are happy to announce first class PHP support with Travis CI.&lt;/p&gt;

&lt;p&gt;It includes all the same features Ruby, Erlang and Node.js projects enjoy today, including:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Easy to get started and integrates with GitHub.&lt;/li&gt;
  &lt;li&gt;Test against multiple databases and services, including Mysql, Postgres, Redis, RabbitMQ and many more.&lt;/li&gt;
  &lt;li&gt;Test your projects against multiple PHP versions.&lt;/li&gt;
  &lt;li&gt;Build results are publicly available online so you can link to them in your bug reports, including line numbers.&lt;/li&gt;
  &lt;li&gt;Notifications the way you want them! (email, IRC, and webhooks)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Over the last several weeks many nice folks from the PHP community have been working with the Travis team
and it would not be possible without all the help from &lt;a href="https://twitter.com/loicfrering"&gt;Loïc Frering&lt;/a&gt; and &lt;a href="https://github.com/pborreli"&gt;Pascal Borreli&lt;/a&gt;. &lt;a href="https://github.com/till"&gt;Till Klampaeckel&lt;/a&gt; has helped us set up &lt;a href="http://sourceforge.net/p/phpfarm/wiki/Home/"&gt;phpfarm&lt;/a&gt; and &lt;a href="http://pear2.php.net/"&gt;pyrus&lt;/a&gt; and test drive the whole thing. &lt;a href="https://twitter.com/old_sound"&gt;Álvaro Videla&lt;/a&gt; and
&lt;a href="https://github.com/lsmith77"&gt;Lukas Kahwe Smith&lt;/a&gt; also helped us a lot by running some of the &lt;a href="https://github.com/friendsofsymfony"&gt;Friends of Symfony&lt;/a&gt; projects on Travis early on.
Pascal also got Symfony, Twig, Silex, Doctrine and Monolog test suites up and running on travis-ci.org (we hope his patches will be accepted
upstream).&lt;/p&gt;

&lt;p&gt;Having all those projects building fine for several days makes us confident that we are ready to ship this feature.&lt;/p&gt;

&lt;p&gt;Please see our &lt;a href="http://about.travis-ci.org/docs/user/languages/php"&gt;initial documentation for PHP projects&lt;/a&gt; and &lt;a href="http://about.travis-ci.org/docs/"&gt;the rest of the guides&lt;/a&gt;. We tried to link to as many real world .travis.yml examples to demonstrate all the features in action.&lt;/p&gt;

&lt;p&gt;In addition, we have a couple of machines lined up that we will be running PHP builds on. One of them is &lt;a href="http://shopify.com"&gt;Shopify&lt;/a&gt;: they donated us a worker we have been using for Node.js projects. Another one is &lt;a href="http://servergrove.com"&gt;ServerGrove&lt;/a&gt;, experts in PHP hosting and specifically frameworks like Symfony and Zend Framework: they donated us one more machine to run PHP builds
on.&lt;/p&gt;

&lt;p&gt;If you have questions, find us in #travis on irc.freenode.net, we will be happy to answer them. To stay up to date with new announcements, CI environment software updates and more, &lt;a href="https://twitter.com/travisci"&gt;follow us on Twitter&lt;/a&gt; and &lt;a href="https://groups.google.com/forum/#!forum/travis-ci"&gt;join our mailing list&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We hope you enjoy using Travis for your open source projects as much as we do. Go add your PHP projects to Travis CI and recommend your fellow PHP developers to do the same!&lt;/p&gt;

&lt;p&gt;The Travis Team.&lt;/p&gt;

&lt;h2 id="spread-the-word"&gt;Spread the word!&lt;/h2&gt;

&lt;p&gt;Feel free to &lt;a href="http://news.ycombinator.com/item?id=3231030"&gt;discuss and upvote on Hacker News&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="updates"&gt;Updates&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Doctrine is now on Travis: &lt;a href="http://travis-ci.org/#!/doctrine/doctrine2"&gt;doctrine2&lt;/a&gt;, &lt;a href="http://travis-ci.org/#!/doctrine/common"&gt;common&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Monolog is now on Travis &lt;a href="http://travis-ci.org/#!/Seldaek/monolog"&gt;Monolog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <id>tag:about.travis-ci.org,2011-11-11://blog/vm_upgrade_nov_11_2011/</id>
    <title type="html">VM environment upgrade, Nov 11th, 2011</title>
    <published>2011-11-11T06:18:00Z</published>
    <updated>2011-11-11T06:18:00Z</updated>
    <link rel="alternate" href="http://about.travis-ci.org//blog/vm_upgrade_nov_11_2011/"/>
    <content type="html">&lt;p&gt;travis-ci.org Ruby workers were upgraded, here is what’s new:&lt;/p&gt;

&lt;h2 id="ruby-workers-changes"&gt;Ruby Workers Changes&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Updated Rubinius 2.0 from 2.0.testing branch&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://bit.ly/rabbitmq-2-7-0"&gt;RabbitMQ 2.7.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Rubinius team was busy making GC and full CPU concurrency improvements as well as upgrading Ruby standard library
for their 1.9 mode. Give it a try by testing your Ruby projects against Rubinius!&lt;/p&gt;

&lt;h2 id="nodejs-workers-changes"&gt;Node.js Workers Changes&lt;/h2&gt;

&lt;p&gt;Node.js workers were upgraded, too:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://bit.ly/rabbitmq-2-7-0"&gt;RabbitMQ 2.7.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="follow-us-on-twitter"&gt;Follow Us on Twitter&lt;/h2&gt;

&lt;p&gt;To get regular updates about travis-ci.org environment upgrades and other developments, &lt;a href="https://twitter.com/travisci"&gt;follow Travis CI on Twitter&lt;/a&gt;
and watch our &lt;a href="https://github.com/travis-ci/travis-cookbooks/tree/master/vagrant_base"&gt;Chef cookbooks repository on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/michaelklishin"&gt;MK&lt;/a&gt; on behalf of the Travis CI Team.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:about.travis-ci.org,2011-11-09://blog/first_class_nodejs_support_on_travis_ci/</id>
    <title type="html">Announcing "first class" Node.js project support!</title>
    <published>2011-11-09T17:00:00Z</published>
    <updated>2011-11-09T17:00:00Z</updated>
    <link rel="alternate" href="http://about.travis-ci.org//blog/first_class_nodejs_support_on_travis_ci/"/>
    <content type="html">&lt;p&gt;One of the things people keep asking us is when language X will be a first class citizen on Travis-CI.
While it has been possible to build Node.js and C++ projects on Ruby workers for a while, it is not very convenient or intuitive, and such projects will not get the killer feature of travis-ci.org: testing against multiple versions/implementations. So we have good news for the Node.js community: Node.js is gaining first class support on Travis-CI, joining Ruby and Erlang.&lt;/p&gt;

&lt;p&gt;Thanks to the hard work by &lt;a href="https://twitter.com/harrybrundage"&gt;Harry Brundage&lt;/a&gt; and the Travis core team, it is now possible to test your Node.js projects against multiple Node versions (currently 0.4.12, 0.5.8 and 0.6.0). We use &lt;a href="https://github.com/travis-ci/travis-cookbooks/blob/master/vagrant_base/nodejs/files/default/nvm.sh"&gt;NVM (“RVM for Node.js”) project&lt;/a&gt; and &lt;a href="https://github.com/travis-ci/travis-cookbooks/tree/master/vagrant_base/nodejs"&gt;Chef cookbooks&lt;/a&gt; to enable to easy switching of Node.js versions.&lt;/p&gt;

&lt;p&gt;In addition, Shopify now sponsors a machine that we will be running five Node.js workers on. Please thank them by sending a loving tweet or two to &lt;a href="https://twitter.com/shopify"&gt;@Shopify&lt;/a&gt; :)&lt;/p&gt;

&lt;h3 id="how-do-i-test-my-project-against-multiple-nodejs-versions"&gt;How do I test my project against multiple Node.js versions?&lt;/h3&gt;

&lt;p&gt;To test your Node.js project against multiple Node versions, add a ‘.travis.yml’ file to your GitHub repository and add the following to it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;language: "node_js"
node_js:
  - 0.4
  - 0.5
  - 0.6
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When you define “node_js” as the language it tells Travis to switch the Node.js version (nvm use 0.4), install the dependencies of the project (npm install), and run the tests (npm test). If you define multiple Node.js versions to test against, like the above example, Travis will create a matrix of test configurations, in this case three builds will be queued. Or you can leave out the node_js versions to test against and Travis will use 0.4 by default. If your project is not yet Node 0.5 or 0.6 compatible,
you can exclude those versions. The same goes for project that want to only support 0.6, for example.&lt;/p&gt;

&lt;p&gt;See Shopify’s &lt;a href="https://github.com/shopify/batman/blob/master/.travis.yml"&gt;Batman&lt;/a&gt; as well as &lt;a href="https://twitter.com/#!/martin_sunset"&gt;Martin Wawrusch&lt;/a&gt;’s &lt;a href="https://github.com/scottyapp/hook.io-blueprint-coffeescript/blob/master/.travis.yml"&gt;hook.io-blueprint-in-coffescript&lt;/a&gt; and &lt;a href="https://github.com/scottyapp/hook.io-amqp-listener/blob/master/.travis.yml"&gt;hook.io-amqp-listener&lt;/a&gt; projects as examples.&lt;/p&gt;

&lt;h2 id="the-workflow"&gt;The Workflow&lt;/h2&gt;

&lt;p&gt;Travis’ Node.js builder will do the following as part of the build process:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Clone your repository from GitHub&lt;/li&gt;
  &lt;li&gt;Pick Node.js version to use&lt;/li&gt;
  &lt;li&gt;Run &lt;code&gt;before_install&lt;/code&gt; commands (can be more than one)&lt;/li&gt;
  &lt;li&gt;Install dependencies using &lt;code&gt;npm install [npm_args]&lt;/code&gt; or whatever you provide in the &lt;code&gt;install&lt;/code&gt; key in your .travis.yml file&lt;/li&gt;
  &lt;li&gt;Run &lt;code&gt;before_script&lt;/code&gt; (can be more than one script)&lt;/li&gt;
  &lt;li&gt;Run &lt;code&gt;install&lt;/code&gt; command if you provided it in your .travis.yml. By default it is &lt;code&gt;npm test&lt;/code&gt; if it finds package.json in the repository root or  &lt;code&gt;make test&lt;/code&gt; otherwise.&lt;/li&gt;
  &lt;li&gt;Run &lt;code&gt;after_script&lt;/code&gt; (can be more than one command)&lt;/li&gt;
  &lt;li&gt;Report the build has finished running&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of steps in the workflow can be overriden by projects that need it. We recommend you to use defaults when possible, though.&lt;/p&gt;

&lt;p&gt;For more information on what is &lt;a href="http://about.travis-ci.org/docs/user/ci-environment/"&gt;available in terms of services&lt;/a&gt; (mysql, postgres, riak, etc.), or how to configure your builds or matrix, visit the &lt;a href="http://about.travis-ci.org/docs/"&gt;docs site&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id="next-steps"&gt;Next steps&lt;/h3&gt;

&lt;p&gt;We have support for more languages in the works, one of which we hope to ship really soon, so stay tuned!&lt;/p&gt;

&lt;h3 id="in-conclusion-aka-lots-of-3-3-3"&gt;In conclusion (a.k.a lots of &amp;lt;3 &amp;lt;3 &amp;lt;3)&lt;/h3&gt;

&lt;p&gt;Once again we would like to thank Harry for doing most of the work on first class Node.js support and Shopify for sponsoring a machine that we will host the workers on. &lt;/p&gt;

&lt;p&gt;Now go add your Node.js projects to travis-ci.org and tell your friends and colleagues about it!&lt;/p&gt;

&lt;p&gt;&amp;lt;3 &amp;lt;3 &amp;lt;3, the &lt;a href="https://twitter.com/travisci"&gt;Travis CI core team&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id="discuss-on-hacker-news"&gt;Discuss on Hacker News&lt;/h3&gt;

&lt;p&gt;You can discuss Node.js support on travis-ci.org &lt;a href="http://news.ycombinator.com/item?id=3216403"&gt;on Hacker News&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
</feed>
