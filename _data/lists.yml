languages:  |
    <div markdown="1" class="langlist">
    * [Android](/user/languages/android/)
    * [C#](/user/languages/csharp)
    * [C++](/user/languages/cpp/)
    * [C](/user/languages/c/)
    * [Clojure](/user/languages/clojure/)
    * [D](/user/languages/d/)
    * [Erlang](/user/languages/erlang/)
    * [F#](/user/languages/csharp/)
    * [Go](/user/languages/go/)
    * [Groovy](/user/languages/groovy/)
    * [Haskell](/user/languages/haskell/)
    * [JavaScript (with Node.js)](/user/languages/javascript-with-nodejs)
    * [Java](/user/languages/java/)
    * [Julia](/user/languages/julia/)
    * [Objective-C](/user/languages/objective-c/)
    * [PHP](/user/languages/php/)
    * [Perl](/user/languages/perl/)
    * [Python](/user/languages/python/)
    * [Ruby](/user/languages/ruby/)
    * [Rust](/user/languages/rust/)
    * [Scala](/user/languages/scala/)
    * [Visual Basic](/user/languages/csharp/)
    </div>
deployments: |
    * [Appfog](/user/deployment/appfog)
    * [Cloud 66](/user/deployment/cloud66)
    * [Heroku](/user/deployment/heroku)
    * [AWS CodeDeploy](/user/deployment/codedeploy)
    * [Modulus](/user/deployment/modulus)
    * [Nodejitsu](/user/deployment/nodejitsu)
    * [OpenShift](/user/deployment/openshift)
    * [cloudControl](/user/deployment/cloudcontrol)
    * [CloudFoundry](/user/deployment/cloudfoundry)
    * [RubyGems](/user/deployment/rubygems)
    * [AWS OpsWorks](/user/deployment/opsworks)
    * [PyPI](/user/deployment/pypi)
    * [Divshot.io](/user/deployment/divshot)
    * [Rackspace Cloud Files](/user/deployment/cloudfiles)
    * [npm](/user/deployment/npm)
    * [S3](/user/deployment/s3)
    * [Ninefold](/user/deployment/ninefold)
    * [Engine Yard](/user/deployment/engineyard)
    * [GitHub Releases](/user/deployment/releases)
    * [Deis](/user/deployment/deis)
    * [Hackage](/user/deployment/hackage)
    * [Google Cloud Storage](/user/deployment/gcs)
    * [packagecloud.io](/user/deployment/packagecloud)
    * [Custom deployment via after_success hook](/user/deployment/custom)
